---
layout: blogpost
title: What's new in Cloudify 2.1
image: yaron.jpg
author: Yaron Parasol
tags: 
 - Chef
 - Scale Rules
 - BYON
 - Cloud Driver
 - DevOps
---

Today we're officially launching the Cloudify 2.1 GA release release, so I thought it would be a good chance to recap what we've been up to in the past few months.

h2. The Lowdown

Over the past couple of months we've been working closely with the first Cloudify users and customers in order to really get the feature priorities right and to constantly improve the user experience in this latest version.
I thought this would be a good opportunity to recap what we've achieved so far, and what we're up to behind the scenes, and hope to include in versions in the near future.

h2. Cloudifysource Community

When we started thinking about Cloudify we immediately decided we are going open source. After all, the whole idea behind this product was openness. The problem we were looking to solve was that of allowing existing applications to easily migrate to the cloud. This, in fact, means two different things for two different user groups:
# For application people it means no changes to their stack or code - taking the application as is
# For the operations experts it means automating the installation, startup and recovery processes of the application without totally changing their compliance and work standards.

Ok, so we designed Cloudify in a very open manner and open-sourced it yadda yadda... but what's an open-source product without a stellar community of developers?
While we were peddling hard just to get the first version of Cloudify out, through challenging beta sites, we were investing in a parallel effort of establishing an entire set of services a community needs. A month ago we launched cloudifysource.org and we're hoping to keep on developing and evolving it - per your needs (so keep the suggestions coming!).
There you will find anything needed to actually use Cloudify, have your questions answered in our forums and your suggestions put on the record in our Ideas thread. The community is also where you're encouraged to get involved in the development effort, and contribute whatever you create: plugins, cloud drivers or even features for the community.

h2. Chef Integration

Cloudify is DevOps by DNA. The recipe concept which is central to Cloudify drew inspiration from Chef and Puppet. So it was only a natural move to combine the powers of Chef with Cloudify.
Chef being focused on single node management as its basic functionality, is orchestrated by Cloudify to install the right cookbook on the right VM with installation configuration provided by Cloudify recipes.
You can already see the prototype of this effort on "(newwindow)Github":https://github.com/CloudifySource/cloudify-recipes/tree/master/service-recipes/chef (where you can find the rest of the Cloudify sources too). Fear not though, a more complete integration with many cookbooks is in the works.

h2. What does Cloudify 2.1 have to offer?

* An improved user experience:
The Cloudify Interactive Shell offers a better experience with all processes: Cloud bootstrapping, Application installation and uninstallation, as well as cloud teardown. These improvements facilitate progress tracking and simplify troubleshooting and recipe debugging.  
* Scale your application:
The key drivers to the cloud are efficiency and agility, which you already very well know. By making your application elastic, you take cloud benefits to the max. Bottom line:  no more over-provisioning.
Your application can start with a certain size that fits the average demand and can scale manually or automatically when load increases.
What's more, unlike other PaaS products, Cloudify provides custom metrics as the trigger for such provisioning changes. The set-instances command allows you to manually change the size of any service within your application. The "scaling rules":http://www.cloudifysource.org/guide/2.1/developing/scaling_rules section of the recipe enables a simple yet powerful automated elasticity. These, combined with custom commands and recipe lifecycle events, give you an entire mechanism to take care of load-balancing and dynamic configuration of the elastic cluster.
* So go on, build your own cloud:
Cloudify 2.1 comes with a new "BYON":http://www.cloudifysource.org/guide/2.1/bootstrapping/bootstrapping_byon (Bring Your Own Node) Cloud Driver, honestly we love this feature, and hope you will too. The idea with this driver is that it actually helps users create their own cloud-like environment using hosts (physical or virtual) provisioned by other tools or manually. The BYON driver allows for nearly unlimited host listing and discovery, so pretty much anything from hard-coded lists to integration with your CMDB can work. This translates to faster and cheaper setup of elastic environments, be it for development, testing or even production. Your recipes running on the BYON driver, are needless to say, completely portable to any cloud without the slightest change.
* "And more...":http://www.cloudifysource.org/guide/2.1/release_notes/release_notes

h2. What's next?

We've already starting working on version 2.2.
Since we're still in its planning phase, we would love to get your suggestions and input.
A few things we can already share:
* The Chef integration will be completed in this release, with ongoing efforts of releasing recipes using particular platforms cookbooks
* An advanced format of the scaling rules will enable any logic as a result of threshold breach, allowing for even the most complex scaling scenario 
* We plan to provide a single sign on security model to the REST and Web servers on the Cloudify  Controller to ease the integration with your existing security arrangements
* 2.2 will support a multi-tenant Cloud Driver so you can deploy different applications with different credentials using the same Cloudify installation
* And much more, so keep on following our posts - and talk to us...we're listening. 

