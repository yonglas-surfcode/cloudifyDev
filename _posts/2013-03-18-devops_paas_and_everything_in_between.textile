---
layout: blogpost
title: DevOps, PaaS and Everything in Between
image: nati.png
author: Nati Shalom
tags: 
 - AWS
 - DevOps
 - Cloud Computing
 - PaaS
 - IaaS
---		
<div id="alpha"><div class="pkg" id="alpha-inner"><div id="entry-6a00d835457b7453ef017ee9800d2e970d" class="entry-category-amazon_web_services entry-category-aws entry-category-cloud entry-category-cloud_computing entry-category-devops entry-category-iaas entry-category-paas entry-author-nati_shalom entry-type-post entry"><div class="entry-content"> <div class="entry-body"><p>This month <a href="http://gigaom.com/2013/02/19/amazon-adds-opsworks-application-life-cycle-management-to-aws-cloud/">Amazon&nbsp;announced AWS OpsWorks<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>, which is the result of their acquisition of Peritor and the embedding of its Scalarium platform within AWS. OpsWorks is a new framework for simplifying the deployment of applications on the cloud.</p>
<p>Given that Amazon already has a few frameworks automating application deployment, such as CloudFormation and Elastic Beanstalk, I find the addition of OpsWorks to the mix to be an important recognition of the void that exists between the existing PaaS and Automation frameworks.</p>
<p>&nbsp;
<a style="display: inline;" href="http://natishalom.typepad.com/.a/6a00d835457b7453ef017d420ba3a5970c-pi" class="asset-img-link"><img border="0" title="AWSOpsWorks" src="http://natishalom.typepad.com/.a/6a00d835457b7453ef017d420ba3a5970c-800wi" class="asset  asset-image at-xid-6a00d835457b7453ef017d420ba3a5970c image-full" alt="AWSOpsWorks"></a></p>
<p>In this post I'll try to zoom in to that void between PaaS and DevOps.</p>
<p>I'll start with a post that I wrote a few months back -&nbsp;<a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/01/there-are-currently-two-main-approaches-for-developing-and-managing-application-in-the-cloudpaas-paas-takes-a-developer-ap.html">PaaS Jailbreaker</a>, in which I pointed out the two models for delivering applications in the cloud, from PaaS to DevOps. In this post I suggested that rather than thinking of the two models as separate entities, it would make sense to combine the two.</p>
<p><a href="http://gigaom.com/author/jurquhart/">James Urquhart<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a> wrote an excellent article on GigaOM - <a target="_blank" href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">Is your PaaS <em>composable</em>&nbsp;or <img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a><em><a target="_blank" href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">contextual?<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>&nbsp;</em>
In his article, Urquhart refers to the differences between the two approaches to PaaS as <a href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">composable<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>&nbsp;vs&nbsp;contextual.  A good example for a contextual&nbsp;approach&nbsp;is the plugin-based approach implemented by&nbsp;Heroku or <a href="http://force.com/">Force.com<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>. Plugins provide a flexible way to extend the platform, but the&nbsp;extension&nbsp;needs to fit into a certain model. For example, in the case of Heroku you don't control the actual VM or underlying cloud infrastructure, nor the network that is provided for that infrastructure. A composable approach, on the other hand, is focused on the composition&nbsp;of the different application&nbsp;components&nbsp;and, as such, doesn't need to assume anything about the underlying infrastructure that runs the&nbsp;components&nbsp;of&nbsp;our&nbsp;application. Amazon OpsWorks fits into that second category.</p>
<p>Urquhart specifically pointed out <strong>Dietzler's Law for Access&nbsp;</strong>as a way to illustrate the limitation of the contextual approach. &nbsp;While the contextual approach (customization via plugins) provides some degree of flexibility, it is the 10% of the things that you can't control that matters most, as they define whether you'll be able to be deliver your application the way you want to:</p>
<blockquote>
<p>Every Access project will eventually fail because, while 80% of what the
user wants is fast and easy to create, and the next 10% is possible with difficulty,
ultimately the last 10% is impossible because you can't get far enough
underneath the built-in abstractions, and users always want 100% of what they
want.</p>
</blockquote>
<p>Interestingly enough, Amazon launched OpsWorks a week later.</p>
The introduction of OpsWorks was quite interesting as it came two years after Amazon launched its Heroku/GAE
equivalent - Elastic Beanstalk.&nbsp;I found the announcement by Amazon quite interesting. The fact that they had a PaaS offering already and still found it necessary to launch a new platform for delivering applications is:
<ol> <li>Acknowledgement that the current PaaS offering isn't a one-size-fits-all
solution, and despite the various extensions that Amazon delivered to support
other languages within the platform, there are still many applications, and consequently
organizations, that do not fit into the Elastic Beanstalk model.</li>
<li>Recognition of the fact that within the realm of the application
delivery, there is a need for a more open framework for delivering applications,
and that realm needs to take a more "composable" approach. In the
case of OpsWorks, the composable approach happens to rely on Chef and the
OpsWorks orchestration layer on top of it.</li>
</ol>
<p>Werner Vogels uses the control vs convenience tradeoff as a way to position the various AWS offerings, as he pointed out in his post:&nbsp;<a href="http://www.allthingsdistributed.com/2013/02/aws-opsworks.html">Expanding the Cloud - Introducing AWS OpsWorks, a Powerful
Application Management Solution<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>:</p>
<blockquote>
<p>With the launch of AWS OpsWorks customers now have a very powerful solution that allows them to manage their application easily without giving up control.&nbsp;</p>
</blockquote>
<p>In other words, OpsWorks is aimed at filling a void between the Beanstalk model and the DIY (do it yourself) model.</p>
<p>
<a style="display: inline;" href="http://natishalom.typepad.com/.a/6a00d835457b7453ef017ee97f9868970d-pi" class="asset-img-link"><img border="0" title="HighLevelServicesvsDIY" src="http://natishalom.typepad.com/.a/6a00d835457b7453ef017ee97f9868970d-800wi" class="asset  asset-image at-xid-6a00d835457b7453ef017ee97f9868970d image-full" alt="HighLevelServicesvsDIY"></a></p>
<p>Interestingly enough, I used to describe the various solutions in the cloud stack in very similar terms to the way Vogels does, with the slight difference that I used the term <a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/05/mapping-the-cloudpaas-stack.html">Control vs Productivity</a> and looked at a broader scope between IaaS and PaaS.</p>
<p><strong>OpsWorks vs Other Kinds of PaaS</strong></p>
<p>In a discussion I had on that subject last week with Ran Tavory and Ori Lahav as part of the Reversim podcast, we seemed to agree that currently, there is space for both models of PaaS - the OpsWorks model (composable) and the Beanstalk model (contextual). Having said that, when I framed the question "which of the frameworks/approaches will run 80% of the cloud workload in the future?" we all seemed to agree that the answer would more likely be OpsWorks. The last point led me to believe that while there is space for the two models right now, this may be only a transition stage, while over time we'll see that first generation PaaS and the likes of Beanstalk will be replaced with second generation PaaS offerings, as in the case of OpsWorks.<strong><br></strong></p>
<p><strong>OpsWorks and the&nbsp;blurring&nbsp;line between PaaS and IaaS</strong></p>
<p>The fact that OpsWorks runs on Chef, as do many of the IaaS services in many cloud infrastructures, also raises the question whether it is right to draw a line between our IaaS services and applications, as I pointed out here:&nbsp;<a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/10/paas-as-an-infrastructure.html">The blurring line between PaaS and IaaS</a>.</p> <p><strong>OpsWorks and Cloudify</strong></p>
<p>OpsWorks and&nbsp;<a href="http://cloudifysource.org/">Cloudify<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>&nbsp;follow the same foundational concepts from an architecture perspective - both frameworks integrate with DevOps tools like Chef and add an orchestration layer on top of it, making it easier to compose various parts of the application stack. In many ways you can think of Cloudify as a framework for building your own OpsWorks.</p>
<p><strong>PaaS, DevOps and Everything in Between</strong></p>
<p>Vogels seems to avoid labeling either Beanstalk or OpsWorks as belonging
to the PaaS category. Urquhart, on the other hand, looked at the two as two kinds
of PaaS solutions - Contextual (Beanstalk) vs Composable (OpsWorks).</p>
<p>One thing that is clear to me is that the current PaaS category is too narrow to fit all the different kinds of PaaS.</p>
<p>Looking at the definition of PaaS in a broader context, I would frame it as a "Platform for running and managing applications on the Cloud." In that context, the way we choose to run those apps becomes an implementation detail. Having that context in mind, I tend to look at both Beanstalk and OpsWorks as two kinds of PaaS offerings. What we're missing at this point is a simple way to label those different categories.</p>
<p>One approach would be to use Urquhart's definition ("Contextual vs Composable) which categorizes the different PaaS solutions based on the approach through which they choose to deliver the apps. We can also look at CloudFoundry vs GAE as open vs closed. Another possible category is PaaS frameworks (i.e. frameworks that provide middleware to build your own PaaS), vs PaaS as a self-service solution.</p>
<p>RightScale, on the other hand, uses the term Cloud Application Management to define a similar category and looks at PaaS as a private use-case for using the Cloud Application Management framework.&nbsp;We also had internal debate on that subject at GigaSpaces and couldn't come to a final agreement on where to draw the line between the different categories.</p>
<p>What do you think? Is OpsWorks a new kind of (Composable) PaaS or Cloud Application Management Platform?</p>
<p>Does it really matter?</p>
<h3>References:</h3>
<ul>
<li><a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/01/there-are-currently-two-main-approaches-for-developing-and-managing-application-in-the-cloudpaas-paas-takes-a-developer-ap.html">GigaSpaces Cloudify &amp; VMware Cloud Foundry the new PaaS Jailbreaker</a></li>
<li><a target="_blank" href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">Is your PaaS <em>composable</em>&nbsp;or <em>contextual</em>? (Hint: the answer matters)<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a></li>
<li><a target="_blank" href="http://natishalom.typepad.com/nati_shaloms_blog/2012/05/mapping-the-cloudpaas-stack.html">Mapping the Cloud/PaaS Stack</a></li>
<li><a target="_self" href="http://natishalom.typepad.com/nati_shaloms_blog/2012/10/paas-as-an-infrastructure.html">The blurring line between PaaS and IaaS</a></li>
<li><a target="_self" href="http://www.allthingsdistributed.com/2013/02/aws-opsworks.html">Expanding the Cloud - Introducing AWS OpsWorks,
a Powerful Application Management Solution<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a></li>
<li><a target="_self" href="http://gigaom.com/2013/02/19/amazon-adds-opsworks-application-life-cycle-management-to-aws-cloud/">Amazon adds OpsWorks application life cycle management to AWS cloud<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a><strong><br></strong></li>
</ul></div>	</div>
</div>
</div></div>
        
        <div id="tpc_post_message" style="display:none;">
<p>&nbsp;
<a style="display: inline;" href="http://natishalom.typepad.com/.a/6a00d835457b7453ef017d420ba3a5970c-pi" class="asset-img-link"><img border="0" title="AWSOpsWorks" src="http://natishalom.typepad.com/.a/6a00d835457b7453ef017d420ba3a5970c-800wi" class="asset  asset-image at-xid-6a00d835457b7453ef017d420ba3a5970c image-full" alt="AWSOpsWorks"></a></p>
<p>In
this post I'll try to zoom in to that void between PaaS and DevOps.</p>
<p>I'll
start with a post that I wrote a few months back -&nbsp;<a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/01/there-are-currently-two-main-approaches-for-developing-and-managing-application-in-the-cloudpaas-paas-takes-a-developer-ap.html">PaaS Jailbreaker</a>, in which I pointed out the two models for
delivering applications in the cloud, from PaaS to DevOps. In this post I
suggested that rather than thinking of the two models as separate entities, it
would make sense to combine the two.</p>
<p><a href="http://gigaom.com/author/jurquhart/">James
Urquhart<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a> wrote an excellent article on GigaOM - <a target="_blank" href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">Is your PaaS <em>composable</em>&nbsp;or <img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a><em><a target="_blank" href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">contextual?<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>&nbsp;</em>In his article,
Urquhart refers to the differences between the two approaches to PaaS as <a href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">composable<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>&nbsp;vs&nbsp;contextual. A
good example for a contextual&nbsp;approach&nbsp;is the plugin-based approach implemented by&nbsp;Heroku or <a href="http://force.com/">Force.com<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>. Plugins provide a
flexible way to extend the platform, but the&nbsp;extension&nbsp;needs to fit
into a certain model. For example, in the case of Heroku you don't control the
actual VM or underlying cloud infrastructure, nor the network that is provided for that infrastructure. A composable approach, on the other hand, is focused on the composition&nbsp;of the different application&nbsp;components&nbsp;and, as such, doesn't
need to assume anything about the underlying infrastructure that runs
the&nbsp;components&nbsp;of&nbsp;our&nbsp;application. Amazon OpsWorks fits
into that second category.</p>
<p>Urquhart specifically pointed out <strong>Dietzler's Law for Access&nbsp;</strong>as
a way to illustrate the limitation of the contextual approach. &nbsp;While the
contextual approach (customization via plugins) provides some degree of
flexibility, it is the 10% of the things that you can't control that matters most,
as they define whether you'll be able to be deliver your application the way you
want to:</p>
<blockquote>
<p>Every Access project will eventually fail because, while 80% of what the
user wants is fast and easy to create, and the next 10% is possible with difficulty,
ultimately the last 10% is impossible because you can't get far enough
underneath the built-in abstractions, and users always want 100% of what they
want.</p>
</blockquote>
<p>Interestingly
enough, Amazon launched OpsWorks a week later.</p>
The introduction of OpsWorks
was quite interesting as it came two years after Amazon launched its Heroku/GAE
equivalent - Elastic Beanstalk.&nbsp;I found the announcement by Amazon quite
interesting. The fact that they had a PaaS offering already and still found it
necessary to launch a new platform for delivering applications is:<ol>
<li>Acknowledgement that the current PaaS offering isn't a one-size-fits-all
solution, and despite the various extensions that Amazon delivered to support
other languages within the platform, there are still many applications, and consequently
organizations, that do not fit into the Elastic Beanstalk model.</li>
<li>Recognition of the fact that within the realm of the application
delivery, there is a need for a more open framework for delivering applications,
and that realm needs to take a more "composable" approach. In the
case of OpsWorks, the composable approach happens to rely on Chef and the
OpsWorks orchestration layer on top of it.</li>
</ol>
<p>Werner Vogels uses the control vs convenience tradeoff as a way to
position the various AWS offerings, as he pointed out in his post:&nbsp;<a href="http://www.allthingsdistributed.com/2013/02/aws-opsworks.html">Expanding the Cloud - Introducing AWS OpsWorks, a Powerful
Application Management Solution<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>:</p>
<blockquote>
<p>With the launch of AWS OpsWorks customers now have a very powerful
solution that allows them to manage their application easily without giving up
control.&nbsp;</p>
</blockquote>
<p>In other words, OpsWorks is aimed at filling a void between the Beanstalk
model and the DIY (do it yourself) model.</p>
<p>
<a style="display: inline;" href="http://natishalom.typepad.com/.a/6a00d835457b7453ef017ee97f9868970d-pi" class="asset-img-link"><img border="0" title="HighLevelServicesvsDIY" src="http://natishalom.typepad.com/.a/6a00d835457b7453ef017ee97f9868970d-800wi" class="asset  asset-image at-xid-6a00d835457b7453ef017ee97f9868970d image-full" alt="HighLevelServicesvsDIY"></a></p>
<p>Interestingly
enough, I used to describe the various solutions in the cloud stack in very
similar terms to the way Vogels does, with the slight difference that I used
the term <a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/05/mapping-the-cloudpaas-stack.html">Control vs Productivity</a> and looked at a broader
scope between IaaS and PaaS.</p>
<p><strong>OpsWorks vs Other Kinds of PaaS</strong></p>
<p>In a discussion I had on that subject last week with Ran Tavory and Ori
Lahav as part of the Reversim podcast, we seemed to agree that currently, there
is space for both models of PaaS - the OpsWorks model (composable) and the Beanstalk
model (contextual). Having said that, when I framed the question "which of
the frameworks/approaches will run 80% of the cloud workload in the future?"
we all seemed to agree that the answer would more likely be OpsWorks. The last
point led me to believe that while there is space for the two models right now,
this may be only a transition stage, while over time we'll see that first
generation PaaS and the likes of Beanstalk will be replaced with second generation
PaaS offerings, as in the case of OpsWorks.<strong><br></strong></p>
<p><strong>OpsWorks and the&nbsp;blurring&nbsp;line between PaaS and IaaS</strong></p>
<p>The
fact that OpsWorks runs on Chef, as do many of the IaaS services in many cloud
infrastructures, also raises the question whether it is right to draw a line
between our IaaS services and applications, as I pointed out here:&nbsp;<a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/10/paas-as-an-infrastructure.html">The blurring line between PaaS and IaaS</a>.</p>
<p><strong>OpsWorks and Cloudify</strong></p>
<p>OpsWorks and&nbsp;<a href="http://cloudifysource.org/">Cloudify<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a>&nbsp;follow the same foundational concepts from an
architecture perspective - both frameworks integrate with DevOps tools like
Chef and add an orchestration layer on top of it, making it easier to compose
various parts of the application stack. In many ways you can think of Cloudify
as a framework for building your own OpsWorks.</p>
<p><strong>PaaS, DevOps and Everything in Between</strong></p>
<p>Vogels seems to avoid labeling either Beanstalk or OpsWorks as belonging
to the PaaS category. Urquhart, on the other hand, looked at the two as two kinds
of PaaS solutions - Contextual (Beanstalk) vs Composable (OpsWorks).</p>
<p>One thing that is clear to me is that the current PaaS category is too
narrow to fit all the different kinds of PaaS.</p>
<p>Looking
at the definition of PaaS in a broader context, I would frame it as a
"Platform for running and managing applications on the Cloud." In
that context, the way we choose to run those apps becomes an implementation
detail. Having that context in mind, I tend to look at both Beanstalk and
OpsWorks as two kinds of PaaS offerings. What we're missing at this point is a
simple way to label those different categories.</p>
<p>One approach would be to use Urquhart's definition ("Contextual vs
Composable) which categorizes the different PaaS solutions based on the
approach through which they choose to deliver the apps. We can also look at
CloudFoundry vs GAE as open vs closed. Another possible category is PaaS
frameworks (i.e. frameworks that provide middleware to build your own PaaS), vs
PaaS as a self-service solution.</p>
<p>RightScale,
on the other hand, uses the term Cloud Application Management to define a
similar category and looks at PaaS as a private use-case for using the Cloud
Application Management framework.&nbsp;We also had internal debate on that
subject at GigaSpaces and couldn't come to a final agreement on where to draw
the line between the different categories.</p>
<p>What
do you think? Is OpsWorks a new kind of (Composable) PaaS or Cloud Application
Management Platform?</p>
<p>Does
it really matter?</p>
<h3>References:</h3>
<ul>
<li><a href="http://natishalom.typepad.com/nati_shaloms_blog/2012/01/there-are-currently-two-main-approaches-for-developing-and-managing-application-in-the-cloudpaas-paas-takes-a-developer-ap.html">GigaSpaces Cloudify &amp; VMware Cloud Foundry the new
PaaS Jailbreaker</a></li>
<li><a target="_blank" href="http://gigaom.com/2013/02/16/devops-complexity-and-anti-fragility-in-it-context-and-composition/">Is your PaaS <em>composable</em>&nbsp;or <em>contextual</em>?
(Hint: the answer matters)<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a></li>
<li><a target="_blank" href="http://natishalom.typepad.com/nati_shaloms_blog/2012/05/mapping-the-cloudpaas-stack.html">Mapping the Cloud/PaaS Stack</a></li>
<li><a target="_self" href="http://natishalom.typepad.com/nati_shaloms_blog/2012/10/paas-as-an-infrastructure.html">The blurring line between PaaS and IaaS</a></li>
<li><a target="_self" href="http://www.allthingsdistributed.com/2013/02/aws-opsworks.html">Expanding the Cloud - Introducing AWS OpsWorks,
a Powerful Application Management Solution<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a></li>
<li><a target="_self" href="http://gigaom.com/2013/02/19/amazon-adds-opsworks-application-life-cycle-management-to-aws-cloud/">Amazon adds OpsWorks application life cycle
management to AWS cloud<img src="http://www.previewshots.com/images/v1.3/t.gif" style="margin: 0px; max-height: 2000px; max-width: 2000px; min-width: 0px; min-height: 0px; padding: 1px 0px 0px; border: 0px none; font-style: normal; font-weight: normal; font-family: &quot;trebuchet ms&quot;,arial,helvetica,sans-serif; float: none; position: static; left: auto; top: auto; line-height: normal; background-image: url(&quot;http://www.previewshots.com/images/v1.3/theme/silver/palette.gif&quot;); background-color: transparent; visibility: visible; width: 14px; height: 12px; background-position: -1128px 0px; background-repeat: no-repeat; text-decoration: none; vertical-align: top; display: inline;" class="snap_preview_icon" id="snap_com_shot_link_icon"></a><strong><br></strong></li>
</ul>
</div>
</div></div></div> 