---
layout: default
title: The Service Context API
category: Developing Recipes
publish: true
abstract: Describes the Service Context API, which is Cloudify's API for interacting with an application service's runtime environment and context
pageord: 7

---

The Service Context API provides access to all or specific service instances from within a lifecycle event handler script.

h2. Retrieving the Service Context from within Event Handlers

The service context can be retrieved from within event handler scripts or closures using the @ServiceContextFactory@. The following example shows how to use @ServiceContextFactory@ to retrieve an instance of the service context in a Groovy event handler script:
<script src="https://gist.github.com/1700385.js?file=getServiceContext.groovy"></script>

Once you have retrieved the service context, you can access any service by name using the @waitForService@ method:
<script src="https://gist.github.com/1700450.js?file=wait4Cassandra.groovy"></script>

h4(info). The @current@ service, the service in which the above code would be running, can be retrieved using @context.serviceName@.

h2. The Service Methods

The @Service@ object provides the following methods:
<script src="https://gist.github.com/1700479.js?file=serviceMethods.groovy"></script>

h2. The Service Instance Methods

The @ServiceInstance@ object can be retrieved using the @getInstances()@ method of the @Service@ object.

h4(info). The @current@ instance Id can be retrieved using @context.getInstanceId()@.

The @ServiceInstance@ object provides the following methods:
<script src="https://gist.github.com/1703676.js?file=serviceInstanceMethods.groovy"></script>

h2. Writing and Reading Runtime Attributes

You can use the Attributes API to exchange information between different contexts such as the Application, the Service, and the Service Instance contexts. For more information, see "The Attributes API":../developing/attributes_api.




