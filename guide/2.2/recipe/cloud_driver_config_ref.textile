---
layout: bt_wiki
title: Cloud Driver Configuration Reference
category: Reference
publish: true
abstract: A reference with all the elements of the cloud driver configuration
pageord: 300
---

h2. Hover over keywords to get more information

<script type="text/javascript">
var messages = {
    cloud:'The cloud driver root element::required',
    cloud_name:'The name of the cloud, as it will appear in the Cloudify UI::required',
	configuration:'General configuration information about the cloud driver implementation',
	className:'The cloud implementation class. Defaults to the built in jclouds-based provisioning driver',
	managementMachineTemplate:'The template name for the management machines. Defaults to the first template in the templates section below',
	connectToPrivateIp:'Indicates whether internal cluster communications should use the machine\'s private IP. Defaults to true',
	configuration_provider:'Provider specific information',
	provider_provider:'The name of the cloud provider. When using the default cloud driver, maps to the Compute Service Context provider name::required',
	localDirectory:'All files from this LOCAL folder will be copied to the folder specified in remoteDirectory::required',
	remoteDirectory:'Files from the local folder will be copied to this folder on the remote machine::required',
	cloudifyUrl:'The HTTP/S URL from where the Cloudify package can be downloaded by newly provisioned machines::required',
	machineNamePrefix:'The prefix for new machines provisioned for services::required',
	dedicatedManagementMachines:'Specifies whether cloudify should try to deploy services on the management machine. Do not change this unless you know EXACTLY what you are doing. Defaults to true',
	managementOnlyFiles:'An array containing a list of files to copy to management machines and not agent machines. Use this list to specify files such as the private key file (e.g. myKeyPair-name.pem) required by the cloud driver',
	sshLoggingLevel:'Logging level for the internal cloud provider logger. Defaults to INFO',
	managementGroup:'The prefix for new machines provisioned as Cloudify management machines::required',
	numberOfManagementMachines:'Number of management machines to start when the cloud is bootstrapped. We recommend specifying 2 for you production environment::required',
	reservedMemoryCapacityPerMachineInMB:'',
	provider_user:'Cloud authentication information',
	user_user:'Identity used to access cloud. When used with the default driver, maps to the identity used to create the ComputeServiceContext',
	apiKey:'Key used to access cloud. When used with the default driver, maps to the credential used to create the ComputeServiceContext',
	keyFile:'The name of the private key file that you created (myKeyPair-name.pem)',
	templates:'Cloud machine templates available with this cloud',
	SMALL_LINUX_32:'The name of the template::required',
	template:'The template object',
	imageId:'The image ID::required',
	machineMemoryMB:'The amount of RAM available to machine::required',
	hardwareId:'The Hardware ID::required',
	locationId:'The location ID',
	options:'Additional template options. When used with the default driver, the options names are considered method names invoked on the TemplateOptions object with the value as the parameter',
	ovverrides:'Overrides to default cloud driver behavior. When used with the default driver, maps to the overriding properties passed to ComputeServiceContext',
	custom:'Custom properties used to extend existing drivers or create new ones'
}
</script> 

 
<pre class='prettyprint'>
cloud {
       name = "ec2"

       configuration {
              className "org.cloudifysource.esc.driver.provisioning.jclouds.DefaultProvisioningDriver"
              managementMachineTemplate "SMALL_LINUX_32"
              connectToPrivateIp true
       }

       provider {
              provider "aws-ec2"
              localDirectory "tools/cli/plugins/esc/ec2/upload"
              remoteDirectory "/home/ec2-user/gs-files"
              cloudifyUrl "http://repository.cloudifysource.org/org/cloudifysource/2.0.1/gigaspaces-cloudify-2.0.1-m1-b1190-13.zip"
              machineNamePrefix "cloudify_agent_"
              dedicatedManagementMachines true
              managementOnlyFiles ([])
              sshLoggingLevel "WARNING"
              managementGroup "cloudify_manager"
              numberOfManagementMachines 1
              reservedMemoryCapacityPerMachineInMB 1024
       }

       user {
              user "ENTER_USER"
              apiKey "ENTER_API_KEY"
              keyFile "cloud-demo.pem"
       }

       templates ([
                    SMALL_LINUX_32 : template{
                        imageId "us-east-1/ami-76f0061f"
                        machineMemoryMB 1600
                        hardwareId "m1.small"
                        locationId "us-east-1"
                                  
                        options ([
                            "securityGroups" : ["default"] as String[],
                            "keyPair" : "cloud-demo"
                        ])
                                  
                        overrides ([:])
                    }
        ])

       custom ([:])
}
</pre>
<script>
prettyPrint();
</script>  
 