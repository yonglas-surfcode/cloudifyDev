---
layout: bt_wiki
title: How the Storage API Works
category: Developing Recipes
publish: true
abstract: Explains how the Cloudify's storage API works
pageord: 13
---

h2. Creating a Volume

!../../images/developing/sd1.jpg!

In this scenario, the service recipe (which resides on the agent machine) invokes a request to create a new volume. This request is handled by the ServiceContext and is delegated all the way to the Storage Driver, which resides on the management machine. The storage driver in turn executes an API call to the specific IaaS provider to create the new volume.
The id of the newly created volume propagates from the IaaS to the service recipe, and as mentioned above, this id serves Cloudify in a subsequent call to the attachVolume method.

h2. Attaching a Volume

!../../images/developing/sd2.jpg!

The same delegation pattern is used for the attachVolume call, but in this case there is no return value. When this call returns, the machine recognizes it has a new device attached to it and can format it and mount it to the file system.
All operations from this point are command lines that are executed directly on the local host.

h2. Mounting a Volume

!../../images/developing/sd3.jpg!

The first step is to format the newly created volume, and then mount it to a local mounting point. When this is done, users can use the mount point as if it was local storage.

h4(impt). Some operations may take time to finish. For example, formatting a 500GB disk may take a while. All the API calls are overloaded with a version that accepts a timeout, so you will not find yourself in constant timeout issues. The "StorageFacade":https://github.com/CloudifySource/cloudify/blob/master/dsl/src/main/java/org/cloudifysource/dsl/context/blockstorage/StorageFacade.java interface describes the default timeouts for each operation.

h2. Releasing and Deleting Volumes

Basically it is very similar to the above; You just need to reverse the API calls order. 


h2. Things to remember:

# A volume cannot be deleted if it is still attached to a machine.
# Detaching a volume without first un-mounting it is a bad idea. It can cause data loss and jam the operating system when trying to terminate the instance.

So the usual and recommended flow for deleting a volume is:

!../../images/developing/sd4.jpg!

