---
layout: blogpost
title: Cloudify and IBM InfoSphere BigInsights
image: yoram.jpeg
author: Yoram Weinreb
tags: 
 - Big Data 
 - IBM BigInsights
 - Hadoop
 - Cloud 
 - Cloudify 
---



<p>Following <a href="http://blog.gigaspaces.com/the-elephant-in-the-cloud-putting-hadoop-on-any-cloud/" title="Nati's blog post">Nati&rsquo;s blog post</a> about big data in the cloud, this post is focused on Cloudify&rsquo;s integration with IBM InfoSphere BigInsights, diving into the integration specifics and how to get your feet wet with running the Cloudify BigInsights recipe&nbsp; hands-on.</p>
<p><a href="http://www-01.ibm.com/software/data/infosphere/biginsights/"><span style="text-decoration:underline;"><strong>The IBM&nbsp; InfoSphere BigInsights product</strong></span> </a>at its core uses the Hadoop framework with IBM improvements and additions focused on making it tailored for <strong>Enterprise</strong> customers by adding administrative, workflow, provisioning, and security features, along with best-in-class analytical capabilities from IBM Research.</p>
<p><strong>Cloudify&rsquo;s value for BigInsights-based applications:</strong></p>
<p>As Nati explained in his post, applications typically consist of a set of services with inter-dependencies and relationships. BigInsights itself is a set of services, and a typical application will utilize some of its services, plus additional home-grown or commercial services. Cloudify provides the application owner the following benefits:</p>
<ol>
                <li><strong>Consistent Management</strong>
                                <ol>
                                                <li><strong>Deployment automation </strong></li>
                                                <li><strong>Automation of post-deployment operations</strong></li>
                                                <li><strong>SLA-based monitoring and auto-scaling</strong></li>
                                </ol>
                </li>
                <li><strong>Cloud Enablement and Portability</strong></li>
</ol>
<p>Let&rsquo;s dive into the actual integration and see how these line items map to the Cloudify BigInsights recipe:</p>
<p><strong>Deployment automation:</strong></p>
<p>When building a Cloudify recipe we have to decide between using the existing installer vs. manually installing each component on each node and tying it all together.&nbsp;We decided to utilize the provided installer to capitalize on the existing BigInsights tool and be as closely aligned with how IBM intended the tool to be used. The sequence of events to get to a working BigInsights service is as follows:</p>
<ol>
                <li>Analyze the service and application recipe to decide on the initial cluster topology.</li>
                <li>Provision new servers or allocate existing servers (from a cloud or existing hardware in the enterprise) to satisfy the topology requirements.</li>
                <li>Prepare the cluster nodes for the BigInsights installer (fulfilling the install prerequisites and&nbsp;requirements such as consistent hostname naming, password SSH or passwords, software packages&hellip;)</li>
                <li>Build a silent install XML file based on the actual cluster nodes and the topology.</li>
                <li>Run the installer and verify everything is working when it is done.</li>
</ol>
<p>This takes care of bringing up the BigInsights cluster and letting us hook it up to the rest of the services.</p>
<p><strong>Automation of post-deployment operations:</strong></p>
<p>Post deployment operations in Cloudify are handled by Cloudify&rsquo;s built-in service management capabilities, such as enabling dynamic adjustment of the number of instances each service will have.&nbsp; In addition to the generic built-in capabilities, which&nbsp;in the BigInsights case can be used, for example, to change the number of data nodes in the cluster, Cloudify recipes define &ldquo;<strong>Custom Commands</strong>&rdquo; that handle specific post-deployment operations.</p>
<p>In the BigInsights recipe we have custom commands that handle Hadoop operations such as adding and removing Hadoop services (Flume, HBase regions, Zookeeper&hellip;) to/from existing nodes, re-balancing the cluster, running DfsAdmin commands as well as DFS commands, all from the Cloudify console.</p>
<p><strong>SLA-based monitoring and auto-scaling:</strong></p>
<p>In addition to the option I mentioned earlier to manually set the number of nodes in the cluster during run-time, Cloudify monitors the application&rsquo;s services and lets us define, in the recipe, SLA-driven policies that can dynamically change the cluster size and the balance between the different services based on the monitoring metrics.</p>
<p>The BigInsights recipe monitors the Hadoop service using a JMX MBeans that Hadoop exposes. The metrics we monitor can easily be changed by editing the list below from the master-service.groovy recipe:<br />
                git://gist.github.com/3507945.git<br />
                These metrics are then tied to visual widgets that will be shown in the Cloudify Web-UI interface and can be referenced in the SLA definition.</p>
<address>For this version of the recipe, we decided to skip automatic scaling rules and let the user control the scaling by custom commands, since in Hadoop, automatic scaling and specifically re-balancing the cluster based on it has to take into account future workloads that are planned to run on it, and since this can be a lengthy process, that actually decreases performance until it is complete. &nbsp; &nbsp;</address>
<p><strong>Cloud Enablement and Portability:</strong></p>
<p>Cloudify handles the cloud enablement and portability using <strong>Cloud Drivers </strong>which abstract the cloud or bare-metal specific provisioning and management details from the recipe. There are built-in drivers for popular clouds such as Openstack, EC2, RackSpace and more, as well as a BYON driver to handle your bare-metal servers.</p>
<p>The Cloud driver let you define hardware templates that will be available for your recipe, as well as your cloud credentials.</p>
<p>For the BigInsight recipe, we define two templates that we will later reference from the recipe. Here is the template definition for the Openstack cloud driver:</p>
<p><script src="https://gist.github.com/3508045.js"></script></p>
<p><strong>Finally, let&rsquo;s dive into a hands-on on-boarding of BigInsights in the cloud: </strong></p>
<p>The recipe is located at <a href="https://github.com/yoramw/cloudify-recipes/tree/master/apps/hadoop-biginsights">BigInsights App folder</a> &amp; <a href="https://github.com/yoramw/cloudify-recipes/tree/master/services/biginsights">BigInsights Service folder</a>.</p>
<p><strong>Download the recipe and do the following :</strong></p>
<ol>
                <li>The recipe expects two server templates: MASTER &amp; DATA. You will need to edit the cloud driver you will be using (under Cloudify home/tools/cli/plugins/esc/&hellip; and add the two templates (shown above) to the existing SMALL_LINUX template.</li>
</ol>
<p><strong>Deployment automation:</strong></p>
<ol start="2">
                <li>Copy the BigInsights recipe to the recipes folder. Verify that you have a BigInsights folder under the services and the apps folders under the Cloudify home/recipes root folder.</li>
                <li>Open the Cloudify console and bootstrap your favorite cloud (which has the two templates defined in #1)</li>
                <li>Install the default BigInsights applications by running the following line (assuming the current directory is Cloudify home/bin)&rdquo;install-application -timeout 45 ../recipes/apps/hadoop-biginsights&rdquo;</li>
</ol>
<p><strong>Automation of post-deployment operations:</strong></p>
<ol start="5">
                <li>To add additional data nodes manually, just increase the number of dataOnDemand service instances by running the following command:<br />
                                <em>set-instances dataOnDemand X</em>(where X is a number higher than the current number of instances and bound by the max instances count defined in the recipe &ndash; default is set to a max of 3)</li>
                <li>To rebalance the HDFS cluster after we added data nodes you can run the following command:<br />
                                <em>invoke master rebalance</em></li>
                <li>To add an HBase region to one of the existing data nodes run the following custom command:<br />
                                <em> invoke master addNode x.x.x.x hbase</em> (where x.x.x.x is the IP of the data node instance)</li>
                <li>You can also trigger dfs and dfsAdmin commands from the Cloudify console, for example:<br />
                                <em> invoke master dfs -ls</em></li>
</ol>
<p><strong>SLA-based monitoring and auto-scaling:</strong></p>
<ol start="9">
                <li>Open the Cloudify Web-UI and select the BigInsights application. You will see the deployment progress and can start the IBM BigInsights management UI directly from the services section of the master service.</li>
                <li>From the same Cloudify Web-UI, make sure the master service in the BigInsights application is selected. Click on the Metrics tab in the middle of the page. You will see the Hadoop metrics shown in the GUI widgets as we defined in the master-service.groovy recipe.
                                <p><script src="https://gist.github.com/3507945.js"></script></p>
                </li>
</ol>
<p>Here is a short video that captures the bootsrapping and deployment of BigInsights using Cloudify:</p>
<p><span style="text-align:center; display: block;"><a href="http://www.cloudifysource.org/cloudifysourcetv#71NFQofafj4" target="_blank" /><img alt="" src="http://blog.gigaspaces.com/wp-content/uploads/2012/10/CloudifyBigInsights-Demo-copy2.png" /></a></span></p>
<p><br />
                <a href="http://feeds.wordpress.com/1.0/gocomments/yoramweinreb.wordpress.com/53/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/yoramweinreb.wordpress.com/53/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=yoramweinreb.wordpress.com&amp;blog=33065114&amp;%23038;post=53&amp;%23038;subd=yoramweinreb&amp;%23038;ref=&amp;%23038;feed=1" width="1" /></p>


